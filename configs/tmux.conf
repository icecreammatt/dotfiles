set-environment -g PATH "/usr/local/bin:/bin:/usr/bin"
# Change ctrl-b default tmux activation to ctrl-o
unbind-key C-b
set -g prefix 'C-o'
bind-key 'C-o' send-prefix

# Move around panes with hjkl, as one would in vim after pressing ctrl + w
set-window-option -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# s_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
# bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
# bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf

# force a reload of the theme config file
unbind t
# bind t source-file ~/.tmux.theme
# bind t source-file ~/dotfiles/configs/tomorrow.tmux.theme

# set aggressive resizing for mixed display sizes and shared sessions
setw -gq aggressive-resize

# start window numbering at 1 for easier switching
set -g base-index 1

# unicode
# setw -gq utf8 on
# set -gq status-utf8 on

# status bar config
# set -g status-left "#h:[#S]"
# set -g status-left "[#S]"
set -g status-left ""
set -g status-left-length 50
set -g status-right-length 50
set -g status-right "#() | %H:%M %d-%h-%Y "
setw -g window-status-current-format "|#I:#W|"
set-window-option -g automatic-rename on
set-option -g allow-rename on

set -g history-limit 10000

# listen to alerts from all windows
set -g bell-action any

# rebind pane tiling
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# reload config
# bind r source-file ~/.tmux.conf \; display-message "tmux configuration file"

# tmux theme
source-file ~/dotfiles/configs/tomorrow.tmux.theme

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

#vim splits
# bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# Fix clear screen
bind C-l send-keys 'C-l'

# Fix yank
bind C-k send-keys 'C-k'

# Mouse Mode Settings
set -gq mouse-utf8 on
set -gq mouse on

# Copy-paste integration
set-option -g default-command "reattach-to-user-namespace -l zsh"

# Esc time fix for vim
set-option -sg escape-time 10

# Additional nvim fixes
# set-option -g default-terminal "screen-256color"
# set-option -g default-terminal "xterm"
# set-option -sa terminal-overrides ',xterm-256color:RGB'


# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"

# https://github.com/tmux/tmux/issues/754

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# run '~/.tmux/plugins/tpm/tpm'
